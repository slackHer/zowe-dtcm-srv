"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("util");
const Constants_1 = require("./Constants");
const IJestStareConfig_1 = require("./doc/IJestStareConfig");
const EnvVars_1 = require("./EnvVars");
const IO_1 = require("../utils/IO");
class Config {
    constructor(mLogger, mExplicitConfig, mProcessParms) {
        this.mLogger = mLogger;
        this.mExplicitConfig = mExplicitConfig;
        this.mProcessParms = mProcessParms;
    }
    buildConfig() {
        const packageJsonConfig = this.getJestStareConfig();
        const envVars = new EnvVars_1.EnvVars();
        const mergedEnvAndPackageJsonConfig = envVars.resolve(packageJsonConfig, envVars.read());
        const config = this.mExplicitConfig || mergedEnvAndPackageJsonConfig;
        if (this.mExplicitConfig != null) {
            Object.keys(mergedEnvAndPackageJsonConfig).forEach((key) => {
                if (util_1.isNullOrUndefined(this.mExplicitConfig[key]) && !util_1.isNullOrUndefined(mergedEnvAndPackageJsonConfig[key])) {
                    config[key] = mergedEnvAndPackageJsonConfig[key];
                }
            });
        }
        if (config.resultDir == null) {
            config.resultDir = Constants_1.Constants.DEFAULT_RESULTS_DIR;
        }
        config.resultDir += "/";
        if (!util_1.isNullOrUndefined(config.log)) {
            this.mLogger.on = config.log;
        }
        if (!util_1.isNullOrUndefined(this.mExplicitConfig)) {
            if (this.mProcessParms && this.mProcessParms.reporter) {
            }
            else {
                this.mLogger.info(Constants_1.Constants.OVERRIDE_JEST_STARE_CONFIG);
            }
        }
        if (util_1.isNullOrUndefined(config.resultHtml)) {
            this.mLogger.debug("Setting to default resultHtml");
            config.resultHtml = Constants_1.Constants.MAIN_HTML;
        }
        else {
            if (config.resultHtml.indexOf(Constants_1.Constants.HTML_EXTENSION) === -1) {
                config.resultHtml = config.resultHtml + Constants_1.Constants.HTML_EXTENSION;
            }
        }
        if (util_1.isNullOrUndefined(config.resultJson)) {
            config.resultJson = Constants_1.Constants.RESULTS_RAW;
        }
        return config;
    }
    getJestStareConfig() {
        const packageJsonObject = IO_1.IO.readPackageJson();
        if (packageJsonObject[IJestStareConfig_1.PACKAGE_JSON_KEY] == null) {
            return {};
        }
        else {
            return packageJsonObject[IJestStareConfig_1.PACKAGE_JSON_KEY];
        }
    }
}
exports.Config = Config;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3Byb2Nlc3Nvci9Db25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBeUM7QUFDekMsMkNBQXdDO0FBQ3hDLDZEQUE0RTtBQUM1RSx1Q0FBb0M7QUFHcEMsb0NBQWlDO0FBT2pDLE1BQWEsTUFBTTtJQU9mLFlBQW9CLE9BQWUsRUFBVSxlQUFpQyxFQUFVLGFBQTRCO1FBQWhHLFlBQU8sR0FBUCxPQUFPLENBQVE7UUFBVSxvQkFBZSxHQUFmLGVBQWUsQ0FBa0I7UUFBVSxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtJQUFJLENBQUM7SUFPbEgsV0FBVztRQUdkLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7UUFHcEQsTUFBTSxPQUFPLEdBQUcsSUFBSSxpQkFBTyxFQUFFLENBQUM7UUFDOUIsTUFBTSw2QkFBNkIsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBR3pGLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxlQUFlLElBQUksNkJBQTZCLENBQUM7UUFHckUsSUFBSSxJQUFJLENBQUMsZUFBZSxJQUFJLElBQUksRUFBRTtZQUM5QixNQUFNLENBQUMsSUFBSSxDQUFDLDZCQUE2QixDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQ3ZELElBQUksd0JBQWlCLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsd0JBQWlCLENBQUMsNkJBQTZCLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtvQkFDeEcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLDZCQUE2QixDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUNwRDtZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ047UUFFRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLElBQUksSUFBSSxFQUFFO1lBQzFCLE1BQU0sQ0FBQyxTQUFTLEdBQUcscUJBQVMsQ0FBQyxtQkFBbUIsQ0FBQztTQUNwRDtRQUNELE1BQU0sQ0FBQyxTQUFTLElBQUksR0FBRyxDQUFDO1FBSXhCLElBQUksQ0FBQyx3QkFBaUIsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQztTQUNoQztRQUlELElBQUksQ0FBQyx3QkFBaUIsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFHMUMsSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFO2FBRXREO2lCQUFNO2dCQUNILElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLHFCQUFTLENBQUMsMEJBQTBCLENBQUMsQ0FBQzthQUMzRDtTQUNKO1FBRUQsSUFBSSx3QkFBaUIsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDdEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsK0JBQStCLENBQUMsQ0FBQztZQUNwRCxNQUFNLENBQUMsVUFBVSxHQUFHLHFCQUFTLENBQUMsU0FBUyxDQUFDO1NBQzNDO2FBQU07WUFDSCxJQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLHFCQUFTLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7Z0JBRTVELE1BQU0sQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLFVBQVUsR0FBRyxxQkFBUyxDQUFDLGNBQWMsQ0FBQzthQUNwRTtTQUNKO1FBRUQsSUFBSSx3QkFBaUIsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDdEMsTUFBTSxDQUFDLFVBQVUsR0FBRyxxQkFBUyxDQUFDLFdBQVcsQ0FBQztTQUM3QztRQUVELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFTTyxrQkFBa0I7UUFDdEIsTUFBTSxpQkFBaUIsR0FBRyxPQUFFLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDL0MsSUFBSSxpQkFBaUIsQ0FBQyxtQ0FBZ0IsQ0FBQyxJQUFJLElBQUksRUFBRTtZQUU3QyxPQUFPLEVBQUUsQ0FBQztTQUNiO2FBQU07WUFFSCxPQUFPLGlCQUFpQixDQUFDLG1DQUFnQixDQUFDLENBQUM7U0FDOUM7SUFDTCxDQUFDO0NBRUo7QUE3RkQsd0JBNkZDIn0=