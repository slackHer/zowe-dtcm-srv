"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const $ = require("jquery");
const Constants_1 = require("../../processor/Constants");
const AnsiParser = require("ansi-parser");
class ImageSnapshotDifference {
    static containsDiff(jestFailureMessage) {
        let isFailure = false;
        for (const indicator of ImageSnapshotDifference.DIFF_INDICATOR) {
            if (jestFailureMessage.indexOf(indicator) >= 0) {
                isFailure = true;
                break;
            }
        }
        return isFailure;
    }
    static generate(jestFailureMessage) {
        const imageDiffFilename = ImageSnapshotDifference.parseDiffImageName(jestFailureMessage);
        const errorMessage = ImageSnapshotDifference.parseDiffError(jestFailureMessage);
        const diffDiv = document.createElement("div");
        diffDiv.className = "image-snapshot-diff";
        const diffMessage = document.createElement("span");
        diffMessage.textContent = errorMessage;
        diffMessage.className = "text-muted";
        diffDiv.appendChild(diffMessage);
        const diffImageLink = document.createElement("a");
        diffImageLink.href = Constants_1.Constants.IMAGE_SNAPSHOT_DIFF_DIR + imageDiffFilename;
        diffDiv.appendChild(diffImageLink);
        const diffImage = document.createElement("img");
        diffImage.src = Constants_1.Constants.IMAGE_SNAPSHOT_DIFF_DIR + imageDiffFilename;
        diffImageLink.appendChild(diffImage);
        return $(diffDiv).get(0);
    }
    static parseDiffImagePath(jestFailureMessage) {
        const match = ImageSnapshotDifference.DIFF_IMAGE.exec(jestFailureMessage);
        if (match) {
            return AnsiParser.removeAnsi(match[1]).trim();
        }
        return null;
    }
    static parseDiffImageName(jestFailureMessage) {
        const path = ImageSnapshotDifference.parseDiffImagePath(jestFailureMessage);
        if (path) {
            return path.replace(/^.*[\\\/]/, "");
        }
    }
    static parseDiffError(jestFailureMessage) {
        const match = ImageSnapshotDifference.DIFF_DETAILS.exec(jestFailureMessage);
        if (match) {
            return match[1];
        }
        return null;
    }
}
ImageSnapshotDifference.DIFF_INDICATOR = ["different from snapshot", "image to be the same size"];
ImageSnapshotDifference.DIFF_IMAGE = /See diff for details:\s*((.*?)\.png)/;
ImageSnapshotDifference.DIFF_DETAILS = /Error: (.*)/;
exports.ImageSnapshotDifference = ImageSnapshotDifference;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1hZ2VTbmFwc2hvdERpZmZlcmVuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVuZGVyL2RpZmYvSW1hZ2VTbmFwc2hvdERpZmZlcmVuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0QkFBNEI7QUFDNUIseURBQXNEO0FBQ3RELDBDQUEwQztBQU8xQyxNQUFhLHVCQUF1QjtJQVl6QixNQUFNLENBQUMsWUFBWSxDQUFDLGtCQUEwQjtRQUNqRCxJQUFJLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdEIsS0FBSyxNQUFNLFNBQVMsSUFBSSx1QkFBdUIsQ0FBQyxjQUFjLEVBQUU7WUFDOUQsSUFBSSxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM5QyxTQUFTLEdBQUcsSUFBSSxDQUFDO2dCQUNqQixNQUFNO2FBQ1A7U0FDRjtRQUVELE9BQU8sU0FBUyxDQUFDO0lBQ3JCLENBQUM7SUFTTSxNQUFNLENBQUMsUUFBUSxDQUFDLGtCQUEwQjtRQUM3QyxNQUFNLGlCQUFpQixHQUFHLHVCQUF1QixDQUFDLGtCQUFrQixDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDekYsTUFBTSxZQUFZLEdBQUcsdUJBQXVCLENBQUMsY0FBYyxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFFaEYsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQW1CLENBQUM7UUFDaEUsT0FBTyxDQUFDLFNBQVMsR0FBRyxxQkFBcUIsQ0FBQztRQUUxQyxNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBb0IsQ0FBQztRQUN0RSxXQUFXLENBQUMsV0FBVyxHQUFHLFlBQVksQ0FBQztRQUN2QyxXQUFXLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQztRQUNyQyxPQUFPLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRWpDLE1BQU0sYUFBYSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFzQixDQUFDO1FBQ3ZFLGFBQWEsQ0FBQyxJQUFJLEdBQUcscUJBQVMsQ0FBQyx1QkFBdUIsR0FBRyxpQkFBaUIsQ0FBQztRQUMzRSxPQUFPLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRW5DLE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFxQixDQUFDO1FBQ3BFLFNBQVMsQ0FBQyxHQUFHLEdBQUcscUJBQVMsQ0FBQyx1QkFBdUIsR0FBRyxpQkFBaUIsQ0FBQztRQUN0RSxhQUFhLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXJDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBUU0sTUFBTSxDQUFDLGtCQUFrQixDQUFDLGtCQUEwQjtRQUV2RCxNQUFNLEtBQUssR0FBRyx1QkFBdUIsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFFMUUsSUFBSSxLQUFLLEVBQUU7WUFDUCxPQUFPLFVBQVUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDakQ7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBUU0sTUFBTSxDQUFDLGtCQUFrQixDQUFDLGtCQUEwQjtRQUV2RCxNQUFNLElBQUksR0FBRyx1QkFBdUIsQ0FBQyxrQkFBa0IsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBRTVFLElBQUksSUFBSSxFQUFFO1lBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUN4QztJQUNMLENBQUM7SUFPTyxNQUFNLENBQUMsY0FBYyxDQUFDLGtCQUEwQjtRQUVwRCxNQUFNLEtBQUssR0FBRyx1QkFBdUIsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFFNUUsSUFBSSxLQUFLLEVBQUU7WUFDUCxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNuQjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7O0FBbEdhLHNDQUFjLEdBQWEsQ0FBQyx5QkFBeUIsRUFBRSwyQkFBMkIsQ0FBQyxDQUFDO0FBQ3BGLGtDQUFVLEdBQVcsc0NBQXNDLENBQUM7QUFDNUQsb0NBQVksR0FBVyxhQUFhLENBQUM7QUFKdkQsMERBcUdDIn0=