"use strict";
/*
* This program and the accompanying materials are made available under the terms of the
* Eclipse Public License v2.0 which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-v20.html
*
* SPDX-License-Identifier: EPL-2.0
*
* Copyright Contributors to the Zowe Project.
*
*/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const imperative_1 = require("@zowe/imperative");
const upload_1 = require("../../../api/methods/upload");
const ZosFilesBase_handler_1 = require("../../ZosFilesBase.handler");
/**
 * Handler to upload content from a local file to a USS file
 * @export
 */
class FileToUSSHandler extends ZosFilesBase_handler_1.ZosFilesBaseHandler {
    processWithSession(commandParameters, session) {
        return __awaiter(this, void 0, void 0, function* () {
            const task = {
                percentComplete: 0,
                statusMessage: "Uploading USS file",
                stageName: imperative_1.TaskStage.IN_PROGRESS
            };
            commandParameters.response.progress.startBar({ task });
            const response = yield upload_1.Upload.fileToUSSFile(session, commandParameters.arguments.inputfile, commandParameters.arguments.USSFileName, commandParameters.arguments.binary, undefined, task);
            const formatMessage = imperative_1.TextUtils.prettyJson(response.apiResponse);
            commandParameters.response.console.log(formatMessage);
            return response;
        });
    }
}
exports.default = FileToUSSHandler;
//# sourceMappingURL=FileToUSS.handler.js.map