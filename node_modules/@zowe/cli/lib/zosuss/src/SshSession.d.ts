import { ICommandArguments, ICommandOptionDefinition, IProfile } from "@zowe/imperative";
import { ISshSession } from "./api/doc/ISshSession";
/**
 * Utility Methods for Brightside
 * @export
 */
export declare class SshSession {
    private mISshSession;
    /**
     * Default ssh port 22
     * @static
     * @memberof AbstractSession
     */
    static readonly DEFAULT_SSH_PORT = 22;
    /**
     * Obtain session info and defaults
     * @readonly
     * @type {ISession}
     * @memberof AbstractSession
     */
    readonly ISshSession: ISshSession;
    static SSH_CONNECTION_OPTION_GROUP: string;
    /**
     * Option used in profile creation and commands for hostname for z/OS SSH
     */
    static SSH_OPTION_HOST: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for port for z/OS SSH
     */
    static SSH_OPTION_PORT: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for username / ID  for z/OS SSH
     */
    static SSH_OPTION_USER: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for password/passphrase for z/OS SSH
     */
    static SSH_OPTION_PASSWORD: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for private key path
     */
    static SSH_OPTION_PRIVATEKEY: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for passphrase for private key
     */
    static SSH_OPTION_KEYPASSPHRASE: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for passphrase for private key
     */
    static SSH_OPTION_HANDSHAKETIMEOUT: ICommandOptionDefinition;
    /**
     * Options related to connecting to z/OS SSH
     * These options can be filled in if the user creates a profile
     */
    static SSH_CONNECTION_OPTIONS: ICommandOptionDefinition[];
    /**
     * Given a z/OS SSH profile, create a SSH Client Session.
     * @static
     * @param {IProfile} profile - The SSH profile contents
     * @returns {Session} - A session for usage in the SSH Client
     */
    static createBasicSshSession(profile: IProfile): SshSession;
    /**
     * Given command line arguments, create a SSH Client Session.
     * @static
     * @param {IProfile} args - The arguments specified by the user
     * @returns {SshSession} - A session for usage in the SSH Client
     */
    static createBasicSshSessionFromArguments(args: ICommandArguments): SshSession;
    /**
     * Creates an instance of AbstractSession.
     * @param {ISshSession} session: SshSession parameter object
     */
    constructor(mISshSession: ISshSession);
    private static readonly log;
    /**
     * Builds an ISshSession so all required pieces are filled in
     * @private
     * @param {ISession} session - the fully populated session
     * @memberof AbstractSession
     */
    private buildSession;
}
