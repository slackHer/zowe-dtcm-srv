import { ICommandArguments, ICommandOptionDefinition, IProfile, Session } from "@zowe/imperative";
/**
 * Utility Methods for Brightside
 * @export
 */
export declare class ZosmfSession {
    static ZOSMF_CONNECTION_OPTION_GROUP: string;
    /**
     * Option used in profile creation and commands for hostname for z/OSMF
     */
    static ZOSMF_OPTION_HOST: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for port for z/OSMF
     */
    static ZOSMF_OPTION_PORT: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for username / ID  for z/OSMF
     */
    static ZOSMF_OPTION_USER: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for password/passphrase for z/OSMF
     */
    static ZOSMF_OPTION_PASSWORD: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for rejectUnauthorized setting for connecting to z/OSMF
     */
    static ZOSMF_OPTION_REJECT_UNAUTHORIZED: ICommandOptionDefinition;
    /**
     * Option used in profile creation and commands for base path setting for connecting to z/OSMF
     */
    static ZOSMF_OPTION_BASE_PATH: ICommandOptionDefinition;
    /**
     * Options related to connecting to z/OSMF
     * These options can be filled in if the user creates a profile
     */
    static ZOSMF_CONNECTION_OPTIONS: ICommandOptionDefinition[];
    /**
     * Given a z/OSMF profile, create a REST Client Session.
     * @static
     * @param {IProfile} profile - The z/OSMF profile contents
     * @returns {Session} - A session for usage in the z/OSMF REST Client
     */
    static createBasicZosmfSession(profile: IProfile): Session;
    /**
     * Given command line arguments, create a REST Client Session.
     * @static
     * @param {IProfile} args - The arguments specified by the user
     * @returns {Session} - A session for usage in the z/OSMF REST Client
     */
    static createBasicZosmfSessionFromArguments(args: ICommandArguments): Session;
    private static readonly log;
}
