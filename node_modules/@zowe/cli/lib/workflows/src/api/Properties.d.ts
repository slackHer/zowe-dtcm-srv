import { AbstractSession } from "@zowe/imperative";
import { IWorkflowInfo } from "./doc/IWorkflowInfo";
import { IStepSummary } from "./doc/IStepSummary";
import { IStepInfo } from "./doc/IStepInfo";
export declare class PropertiesWorkflow {
    /**
     * This operation returns properties of the workflow.
     * Parameters indicators are mandatory,request can include steps and variables indicator for requested result.
     * @param {AbstractSession} session - z/OSMF connection info
     * @param {string} workflowfKey - Key of workflow.
     * @param {string} zOSMFVersion - the URI path that identifies the version of the provisioning service.
     * @param {boolean} steps - Optional parameter for listing steps properties.
     * @param {boolean} variables - Optional parameter for listing variables properties.
     * @returns {Promise<IWorkflowInfo>} z/OSMF response object
     * @memberof Properties
     */
    static getWorkflowProperties(session: AbstractSession, workflowKey: string, zOSMFVersion?: string, steps?: boolean, variables?: boolean): Promise<IWorkflowInfo>;
    /**
     * Processes the z/OSMF workflow step info
     * in a recursive manner.
     *
     * @protected
     * @static
     * @param {IStepInfo[]} steps z/OSMF steps to be processed
     * @returns {Promise<IStepSummary[]>} Array of z/OSMF step summary objects
     * @memberof PropertiesWorkflow
     */
    static processStepSummaries(steps: IStepInfo[]): Promise<IStepSummary[]>;
}
