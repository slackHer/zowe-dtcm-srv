import { AbstractSession } from "@zowe/imperative";
import { startT } from "./doc/IStartWorkflow";
/**
 * Class to handle starting of zOSMF workflow instance
 */
export declare class StartWorkflow {
    /**
     * Create a zOSMF workflow instance
     * @param {AbstractSession} session                     - z/OSMF connection info
     * @param {string} workflowKey                          - Unique key that workflow instant got assigned by zOSMF
     * @param {string} resolveConflict                      - Indicates how variable conflicts are to be handled when
     *                                                        the Workflows task reads in the output file from a step.
     *                                                        Allowed values are: outputFileValue, existingValue,
     *                                                        leaveConflict(have to resolve conflict manually)
     * @param {string} step                                 - Specifies the step name that will run.
     * @param {string} subsequent                           - If the workflow contains any subsequent automated steps,
     *                                                        this property indicates whether z/OSMF is to perform the steps.
     * @param {string} zOSMFVersion                         - Identifies the version of the zOSMF workflow service.
     * @returns {Promise}
     */
    static startWorkflow(session: AbstractSession, workflowKey: string, resolveConflict?: startT, step?: string, subsequent?: boolean, zOSMFVersion?: string): Promise<string>;
}
