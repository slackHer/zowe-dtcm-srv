"use strict";
/*
* This program and the accompanying materials are made available under the terms of the
* Eclipse Public License v2.0 which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-v20.html
*
* SPDX-License-Identifier: EPL-2.0
*
* Copyright Contributors to the Zowe Project.
*
*/
Object.defineProperty(exports, "__esModule", { value: true });
const imperative_1 = require("@zowe/imperative");
/**
 * Constants for workflow related APIs.
 * @export
 * @class WorkflowConstants
 */
class WorkflowConstants {
}
/**
 * URI base for workflow API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.RESOURCE = "/zosmf/workflow/rest";
/**
 * URI base for workflows API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.WORKFLOW_DEFINITION = "workflowDefinition";
/**
 * URI base for workflows API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.WORKFLOW_RESOURCE = "workflows";
/**
 * URI base for workflows API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.ARCH_WORKFLOW_RESOURCE = "archivedworkflows";
/**
 * URI base for starting workflow API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.START_WORKFLOW = "operations/start";
/**
 * URI base for archiving workflow API
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.ARCHIVE_WORKFLOW = "operations/archive";
/**
 * URI base for canceling workflow API.
 *
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.CANCEL_WORKFLOW = "operations/cancel";
/**
 * URI base for list workflows from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.LIST_WORKFLOWS = "operations/list";
/**
 * URI base for filter workflows from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.category = "category";
/**
 * URI base for filter workflows from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.system = "system";
/**
 * URI base for filter workflows from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.owner = "owner";
/**
 * URI base for filter workflows from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.vendor = "vendor";
/**
 * URI base for filter workflows from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.statusName = "statusName";
/**
 * URI base for filter workflows from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.workflowKey = "workflowKey";
/**
 * URI base for filter workflows from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.workflowName = "workflowName";
/**
 * URI base for filtering workflow by name API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.WF_NAME = "workflowName";
/**
 * Version of the z/OSMF
 * @static
 * @type {string}
 * @memberOf WorkflowConstants
 */
WorkflowConstants.ZOSMF_VERSION = "1.0";
/**
 * URI base for returnData for workflow properties from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.returnData = "returnData";
/**
 * URI base for steps for workflow properties from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.steps = "steps";
/**
 * URI base for variables for workflow properties from registry API.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.variables = "variables";
/**
 * URI base for filePath for workflow definition.
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.filePath = "definitionFilePath";
/**
 * Default path for uploading temporary files
 * @static
 * @type {string}
 * @memberof WorkflowConstants
 */
WorkflowConstants.tempPath = "/tmp";
exports.WorkflowConstants = WorkflowConstants;
/**
 * Error message that no session was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.noSession = {
    message: imperative_1.apiErrorHeader + `No session was supplied.`
};
/**
 * Error message that no z/OSMF version parameter string was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.nozOSMFVersion = {
    message: imperative_1.apiErrorHeader + `No z/OSMF version parameter was supplied.`
};
/**
 * Error message that no workflow key string was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.noWorkflowKey = {
    message: imperative_1.apiErrorHeader + `No workflow key parameter was supplied.`
};
/**
 * Error message that workflow key that was supplied does not exist.
 * IZUWF5001W: The workflow key "workflowkey" was not found.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.WrongWorkflowKey = {
    message: "IZUWF5001W"
};
/**
 * Error message that no steps parameter was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.noSteps = {
    message: imperative_1.apiErrorHeader + `No steps parameter was supplied.`
};
/**
 * Error message that no variables parameter was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.noVariables = {
    message: imperative_1.apiErrorHeader + `No variables parameter was supplied.`
};
/**
 * Error message that no workflow definition file parameter string was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.noWorkflowDefinitionFile = {
    message: imperative_1.apiErrorHeader + `No workflow definition file parameter was supplied.`
};
/**
 * Error message that no workflow name parameter string was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.noWorkflowName = {
    message: imperative_1.apiErrorHeader + `No workflow name parameter was supplied.`
};
/**
 * Error message that no system name parameter string was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.noSystemName = {
    message: imperative_1.apiErrorHeader + `No system name parameter was supplied.`
};
/**
 * Error message that no system name parameter string was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.wrongString = {
    message: imperative_1.apiErrorHeader + `Parameter contains wrong character - & or ?.`
};
/**
 * Error message that no owner parameter string was supplied.
 * @static
 * @type {IMessageDefinition}
 * @memberof WorkflowConstants
 */
exports.noOwner = {
    message: imperative_1.apiErrorHeader + `No owner parameter was supplied.`
};
exports.wrongOwner = {
    message: imperative_1.apiErrorHeader + `Wrong format of user ID supplied.`
};
//# sourceMappingURL=WorkflowConstants.js.map