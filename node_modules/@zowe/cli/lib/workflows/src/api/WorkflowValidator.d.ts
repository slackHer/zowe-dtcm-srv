import { AbstractSession } from "@zowe/imperative";
/**
 * Class validates parameters for workflows commands.
 * @export
 * @class WorkflowValidator
 */
export declare class WorkflowValidator {
    /**
     * Validate session
     * @static
     * @param {AbstractSession} session - z/OSMF connection info
     * @memberof WorkflowValidator
     */
    static validateSession(session: AbstractSession): void;
    /**
     * Validate supplied parameters
     * @static
     * @param {string} text - string to check if not null or undefined
     * @param {string} errorMsg - message to show in case validation fails
     * @memberof WorkflowValidator
     */
    static validateString(text: string, errorMsg: string): void;
    /**
     * Validate supplied parameters
     * @static
     * @param {string} text - string to check if empty
     * @param {string} errorMsg - message to show in case validation fails
     * @memberof WorkflowValidator
     */
    static validateNotEmptyString(text: string, errorMsg: string): void;
    /**
     * Validate supplied string for parameters if there is not value "?" or "&"
     * @static
     * @param {string} parameterValue - check if the provided parameters does not contain value "?" or "&"
     * @param {string} errorMsg - message to show in case validation fails
     * @memberof WorkflowValidator
     */
    static validateParameter(parameterValue: string, errorMsg: string): void;
    /**
     * Validate supplied parameter
     * @static
     * @param {string} userID - string to check if it is valid user ID regarding IBM
     * @param {string} errorMsg - message to show in case validation fails
     * @memberof WorkflowValidator
     */
    static validateOwner(userID: string, errorMsg: string): void;
}
