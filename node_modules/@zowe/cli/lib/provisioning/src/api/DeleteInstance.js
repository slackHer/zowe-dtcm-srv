"use strict";
/*
* This program and the accompanying materials are made available under the terms of the
* Eclipse Public License v2.0 which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-v20.html
*
* SPDX-License-Identifier: EPL-2.0
*
* Copyright Contributors to the Zowe Project.
*
*/
Object.defineProperty(exports, "__esModule", { value: true });
const imperative_1 = require("@zowe/imperative");
const rest_1 = require("../../../rest");
const ProvisioningConstants_1 = require("./ProvisioningConstants");
const ProvisioningValidator_1 = require("./ProvisioningValidator");
/**
 * Delete deprovisioned instances.
 * @export
 * @class DeleteInstance
 */
class DeleteInstance {
    /**
     * Performs the delete action against a provisioned software service instance.
     * @param {AbstractSession} session - z/OSMF connection info
     * @param {string} zOSMFVersion - the URI path variable that identifies the version of the z/OSMF software services template service.
     *                              The following value is valid: 1.0.
     * @param {string} instanceId - the object-id of provisioned instance in the registry.
     * @returns {Promise<{}>} z/OSMF response is empty object.
     * @memberof DeleteInstance
     */
    static deleteDeprovisionedInstance(session, zOSMFVersion, instanceId) {
        ProvisioningValidator_1.ProvisioningValidator.validateSession(session);
        ProvisioningValidator_1.ProvisioningValidator.validateNotEmptyString(zOSMFVersion, ProvisioningConstants_1.nozOSMFVersion.message);
        ProvisioningValidator_1.ProvisioningValidator.validateNotEmptyString(instanceId, ProvisioningConstants_1.noInstanceId.message);
        let resourcesQuery = `${ProvisioningConstants_1.ProvisioningConstants.RESOURCE}/${zOSMFVersion}/`;
        resourcesQuery += `${ProvisioningConstants_1.ProvisioningConstants.INSTANCES_RESOURCE}/${instanceId}`;
        return rest_1.ZosmfRestClient.deleteExpectString(session, resourcesQuery, [imperative_1.Headers.APPLICATION_JSON]);
    }
}
exports.DeleteInstance = DeleteInstance;
//# sourceMappingURL=DeleteInstance.js.map