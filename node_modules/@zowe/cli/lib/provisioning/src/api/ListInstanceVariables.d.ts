import { AbstractSession } from "@zowe/imperative";
import { IProvisionedInstanceVariables } from "./doc/zosmf/IProvisionedInstanceVariables";
/**
 * Get variables of the provisioned instance.
 * @export
 * @class ListInstanceVariables
 */
export declare class ListInstanceVariables {
    /**
     * This operation returns variables of the provisioned instance.
     * @param {AbstractSession} session - z/OSMF connection info
     * @param {string} zOSMFVersion - the URI path that identifies the version of the provisioning service.
     * @param {string} instanceId - unique id of the provisioned instance .
     * @returns {Promise<IProvisionedInstanceVariable>} z/OSMF response object, @see {IProvisionedInstanceVariable}
     * @memberof ListInstanceVariables
     */
    static listVariablesCommon(session: AbstractSession, zOSMFVersion: string, instanceId: string): Promise<IProvisionedInstanceVariables>;
    /**
     * Builds a resources query from passed parameters which is needed for z/OSMF api URI.
     * @param {string} zOSMFVersion - the URI path that identifies the version of the provisioning service.
     * @param {string} instanceId - unique id of the provisioned instance .
     * @returns {string} URI path for the REST call.
     * @memberof ListInstanceVariables
     */
    static getResourcesQuery(zOSMFVersion: string, instanceId: string): string;
}
