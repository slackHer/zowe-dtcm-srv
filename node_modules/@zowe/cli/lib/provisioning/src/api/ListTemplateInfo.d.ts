import { AbstractSession } from "@zowe/imperative";
import { IPublishedTemplateInfo } from "./doc/zosmf/IPublishedTemplateInfo";
/**
 * Get info about a template.
 * @export
 * @class ListTemplateInfo
 */
export declare class ListTemplateInfo {
    /**
     * This operation retrieves a published software service template from the catalog.
     * @param {AbstractSession} session - z/OSMF connection info
     * @param {string} zOSMFVersion - the URI path variable that identifies the version of the z/OSMF software services template service.
     *                              The following value is valid: 1.0.
     * @param {string} templateName - the name of published software service template in the catalog.
     * @returns {Promise<IPublishedTemplateInfo>} z/OSMF response object, @see {IPublishedTemplateInfo}
     * @memberof ListTemplateInfo
     */
    static listTemplateCommon(session: AbstractSession, zOSMFVersion: string, templateName: string): Promise<IPublishedTemplateInfo>;
    /**
     * Builds a resources query from passed parameters which is needed for z/OSMF api URI.
     * @param {string} zOSMFVersion is the URI path variable that identifies the version of the z/OSMF software services template service.
     *                              The following value is valid: 1.0.
     * @param {string} templateName is the name of published software service template in the catalog.
     * @returns {string} URI for z/OSMF REST call
     * @memberof ListTemplateInfo
     */
    static getResourcesQuery(zOSMFVersion: string, templateName: string): string;
}
