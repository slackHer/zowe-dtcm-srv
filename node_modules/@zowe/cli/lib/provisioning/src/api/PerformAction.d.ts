import { AbstractSession } from "@zowe/imperative";
import { IPerformActionResponse } from "./doc/zosmf/IPerformActionResponse";
/**
 * Perform an action on published software service template.
 * @export
 * @class PerformAction
 */
export declare class PerformAction {
    /**
     * Performs an action against a provisioned software service instance.
     * @param {AbstractSession} session - z/OSMF connection info
     * @param {string} zOSMFVersion - the URI path variable that identifies the version of the z/OSMF software services template service.
     *                              The following value is valid: 1.0.
     * @param {string} instanceId - the object-id of provisioned instance in the registry.
     * @param {string} actionName - name of the action to perform.
     * @returns {Promise<IPerformActionResponse>} z/OSMF response object, @see {IPerformActionResponse}
     * @memberof PerformAction
     */
    static doProvisioningActionCommon(session: AbstractSession, zOSMFVersion: string, instanceId: string, actionName: string): Promise<IPerformActionResponse>;
    /**
     * Builds a resources query from passed parameters which is needed for z/OSMF api URI.
     * @param {string} zOSMFVersion - the URI path variable that identifies the version of the z/OSMF software services template service.
     *                              The following value is valid: 1.0.
     * @param {string} instanceId - the object-id of provisioned instance in the registry.
     * @param {string} actionName - name of the action to perform.
     * @returns {string} URI for z/OSMF REST call
     * @memberof PerformAction
     */
    static getResourcesQuery(zOSMFVersion: string, instanceId: string, actionName: string): string;
}
