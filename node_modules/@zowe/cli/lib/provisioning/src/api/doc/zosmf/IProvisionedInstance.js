"use strict";
/*
* This program and the accompanying materials are made available under the terms of the
* Eclipse Public License v2.0 which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-v20.html
*
* SPDX-License-Identifier: EPL-2.0
*
* Copyright Contributors to the Zowe Project.
*
*/
Object.defineProperty(exports, "__esModule", { value: true });
const IProvisionedInstanceActions_1 = require("./IProvisionedInstanceActions");
const IProvisionedInstanceVariable_1 = require("./IProvisionedInstanceVariable");
const prettySummary = {
    "external-name": "Name",
    "state": "State",
    "object-id": "Object Id",
    "type": "Type",
    "system": "System",
    "sysplex": "Sysplex",
    "version": "Version",
    "description": "Description",
    "owner": "Owner",
    "variables": "Variables",
    "actions": "Actions"
};
const prettyFull = Object.assign({}, prettySummary, { "vendor": "Vendor", "provider": "Provider", "ssin": "SSIN", "object-name": "Object Name", "version": "Version", "email": "E-Mail", "object-uri": "Object URI", "registry-type": "Registry Type", "system-nickname": "System Nickname", "catalog-object-id": "Catalog Object ID", "catalog-object-name": "Catalog Object Name", "workflow-key": "Workflow Key", "workflow-clean-after-provisioned": "Workflow Clean After Provisioned", "jobs-disposition": "Jobs Disposition", "created-time": "Created Time", "last-modified-time": "Last Modified Time", "created-by-user": "Created By User", "last-modified-by-user": "Last Modified By User", "last-action-name": "Last Action Name", "last-action-object-id": "Last Action Object ID", "last-action-state": "Last Action State", "user-data": "User Data", "user-data-id": "User Data ID", "tenant-id": "Tenant ID", "tenant-name": "Tenant Name", "domain-id": "Domain ID", "domain-name": "Domain Name", "job-statement": "Job Statement", "account-info": "Account Info", "runAsUser-audit": "Run As User Audit", "workflow-start-time": "Workflow Start Time", "workflow-stop-time": "Workflow Stop Time" });
/**
 * Main explanation map object for provisioned instance summary output without variables and actions.
 * @type IExplanationMap, @see {IExplanationMap}
 * @memberof IProvisionedInstance
 */
exports.explainProvisionedInstanceSummary = Object.assign({}, prettySummary, { ignoredKeys: "variables,actions", explainedParentKey: null });
/**
 * Main explanation map object for provisioned instance summary output with variables.
 * @type IExplanationMap, @see {IExplanationMap}
 * @memberof IProvisionedInstance
 */
exports.explainProvisionedInstanceSummaryWithVars = Object.assign({}, prettySummary, { explainedParentKey: null, variables: IProvisionedInstanceVariable_1.explainProvisionedInstanceVariable, ignoredKeys: "actions" });
/**
 * Main explanation map object for provisioned instance summary output with actions.
 * @type IExplanationMap, @see {IExplanationMap}
 * @memberof IProvisionedInstance
 */
exports.explainProvisionedInstanceSummaryWithActions = Object.assign({}, prettySummary, { explainedParentKey: null, actions: IProvisionedInstanceActions_1.explainProvisionedInstanceActionsSummary, ignoredKeys: "variables" });
/**
 * Main explanation map object for extended provisioned instance output.
 * @type IExplanationMap, @see {IExplanationMap}
 * @memberof IProvisionedInstance
 */
exports.explainProvisionedInstanceExtended = Object.assign({}, prettyFull, { explainedParentKey: null, actions: IProvisionedInstanceActions_1.explainProvisionedInstanceActionsSummary, ignoredKeys: "variables" });
/**
 * Main explanation map object for full provisioned instance output.
 * @type IExplanationMap, @see {IExplanationMap}
 * @memberof IProvisionedInstance
 */
exports.explainProvisionedInstanceFull = Object.assign({}, prettyFull, { explainedParentKey: null, ignoredKeys: null, variables: IProvisionedInstanceVariable_1.explainProvisionedInstanceVariable, actions: IProvisionedInstanceActions_1.explainProvisionedInstanceActionsFull });
//# sourceMappingURL=IProvisionedInstance.js.map