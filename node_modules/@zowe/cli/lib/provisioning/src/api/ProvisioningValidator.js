"use strict";
/*
* This program and the accompanying materials are made available under the terms of the
* Eclipse Public License v2.0 which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-v20.html
*
* SPDX-License-Identifier: EPL-2.0
*
* Copyright Contributors to the Zowe Project.
*
*/
Object.defineProperty(exports, "__esModule", { value: true });
const imperative_1 = require("@zowe/imperative");
const ProvisioningConstants_1 = require("./ProvisioningConstants");
/**
 * Class validates parameters for provisioning commands.
 * @export
 * @class ProvisioningValidator
 */
class ProvisioningValidator {
    /**
     * Validate session
     * @static
     * @param {AbstractSession} session - z/OSMF connection info
     * @memberof ProvisioningValidator
     */
    static validateSession(session) {
        imperative_1.ImperativeExpect.toNotBeNullOrUndefined(session, imperative_1.TextUtils.formatMessage(ProvisioningConstants_1.noSessionProvisioning.message));
    }
    /**
     * Validate supplied parameters
     * @static
     * @param {string} text - string to check if not null or undefined
     * @param {string} errorMsg - message to show in case validation fails
     * @memberof ProvisioningValidator
     */
    static validateString(text, errorMsg) {
        imperative_1.ImperativeExpect.toNotBeNullOrUndefined(text, errorMsg);
    }
    /**
     * Validate supplied parameters
     * @static
     * @param {string} text - string to check if empty
     * @param {string} errorMsg - message to show in case validation fails
     * @memberof ProvisioningValidator
     */
    static validateNotEmptyString(text, errorMsg) {
        imperative_1.ImperativeExpect.toNotBeEqual("", text, errorMsg);
        ProvisioningValidator.validateString(text, errorMsg);
    }
}
exports.ProvisioningValidator = ProvisioningValidator;
//# sourceMappingURL=ProvisioningValidator.js.map