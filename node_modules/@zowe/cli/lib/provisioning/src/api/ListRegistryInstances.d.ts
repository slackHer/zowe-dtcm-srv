import { AbstractSession } from "@zowe/imperative";
import { IProvisionedInstances } from "./doc/zosmf/IProvisionedInstances";
/**
 * Get info about all provisioned instances.
 * @export
 * @class ListRegistryInstances
 */
export declare class ListRegistryInstances {
    /**
     * This operation returns registry of provisioned instances.
     * @param {AbstractSession} session - z/OSMF connection info
     * @param {string} zOSMFVersion - the URI path that identifies the version of the provisioning service.
     * @param {string} filteredQuery - URI path with filters for listing filtered registry instances.
     * @returns {Promise<IProvisionedInstances>} z/OSMF response object, @see {IProvisionedInstances}
     * @memberof ListRegistryInstances
     */
    static listRegistryCommon(session: AbstractSession, zOSMFVersion: string, filteredQuery?: string): Promise<IProvisionedInstances>;
    /**
     * This operation returns registry of provisioned instances filtered by type and external name.
     * @param {AbstractSession} session - z/OSMF connection info
     * @param {string} zOSMFVersion - the URI path that identifies the version of the provisioning service.
     * @param {string} type - system type of the instance.
     * @param {string} externalName - regular expression, specifies the external name of the instance.
     * @returns {Promise<IProvisionedInstances>} z/OSMF response object, @see {IProvisionedInstances}
     * @memberof ListRegistryInstances
     */
    static listFilteredRegistry(session: AbstractSession, zOSMFVersion: string, type: string, externalName: string): Promise<IProvisionedInstances>;
    /**
     * Builds URI path from provided parameters.
     * @param {string} zOSMFVersion - the URI path that identifies the version of the provisioning service.
     * @param {string} type - system type of the instance.
     * @param {string} externalName - regular expression, specifies the external name of the instance.
     * @returns {string} URI path for the REST call.
     * @memberof ListRegistryInstances
     */
    static getResourcesQuery(zOSMFVersion: string, type?: string, externalName?: string): string;
}
