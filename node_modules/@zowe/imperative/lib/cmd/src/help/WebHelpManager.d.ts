import { IWebHelpManager } from "./doc/IWebHelpManager";
import { IHandlerResponseApi } from "../doc/response/api/handler/IHandlerResponseApi";
import { ICommandDefinition } from "../doc/ICommandDefinition";
export declare class WebHelpManager implements IWebHelpManager {
    private static mInstance;
    private mFullCommandTree;
    static readonly instance: WebHelpManager;
    openRootHelp(cmdResponse: IHandlerResponseApi): void;
    openHelp(inContext: string, cmdResponse: IHandlerResponseApi): void;
    /**
     * Record a reference to our CLI's full command tree.
     * @param fullCommandTree - The command tree.
     */
    /**
    * Get a reference to our CLI's full command tree.
    * @returns The command tree.
    */
    fullCommandTree: ICommandDefinition;
    private readonly webHelpDir;
    /**
     * Computes current package metadata based on version of core and installed plug-ins
     * @param packageJson - CLI package JSON
     * @param pluginsJson - Imperative plug-ins JSON
     * @returns {IPackageMetadata[]} Names and versions of all components
     */
    private calcPackageMetadata;
    /**
     * Compares two package metadata objects to see if they are equal
     * @param {IPackageMetadata[]} cached - Old cached package metadata
     * @param {IPackageMetadata[]} current - Freshly computed package metadata
     * @returns {boolean} True if the package metadata objects are equal
     */
    private eqPackageMetadata;
    /**
     * Checks if cached package metadata is non-existent or out of date
     * @returns {MaybePackageMetadata} Updated metadata, or `null` if cached metadata is already up to date
     */
    private checkIfMetadataChanged;
    /**
     * Updates cached package metadata
     * @param {IPackageMetadata[]} metadata - New metadata to save to disk
     */
    private writePackageMetadata;
}
