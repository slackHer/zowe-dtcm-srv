"use strict";
/*
* This program and the accompanying materials are made available under the terms of the
* Eclipse Public License v2.0 which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-v20.html
*
* SPDX-License-Identifier: EPL-2.0
*
* Copyright Contributors to the Zowe Project.
*
*/
Object.defineProperty(exports, "__esModule", { value: true });
const utilities_1 = require("../../../../utilities");
const path_1 = require("path");
const logger_1 = require("../../../../logger");
/**
 * Constants used by the PMF.
 */
class PMFConstants {
    /**
     * Get the singleton PMFConstants object. The first time this is requested, a
     * new object is created.
     *
     * @returns {PMFConstants} The constants class
     */
    static get instance() {
        if (PMFConstants.mInstance == null) {
            PMFConstants.mInstance = new PMFConstants();
        }
        return PMFConstants.mInstance;
    }
    constructor() {
        this.NPM_NAMESPACE = "@zowe";
        this.CLI_CORE_PKG_NAME = utilities_1.ImperativeConfig.instance.hostPackageName;
        this.IMPERATIVE_PKG_NAME = utilities_1.ImperativeConfig.instance.imperativePackageName;
        this.PMF_ROOT = path_1.join(utilities_1.ImperativeConfig.instance.cliHome, "plugins");
        this.PLUGIN_JSON = path_1.join(this.PMF_ROOT, "plugins.json");
        this.PLUGIN_INSTALL_LOCATION = path_1.join(this.PMF_ROOT, "installed");
        // Windows format is <prefix>/node_modules
        if (process.platform === "win32") {
            this.PLUGIN_NODE_MODULE_LOCATION = path_1.join(this.PLUGIN_INSTALL_LOCATION, "node_modules");
        }
        // Everyone else is <prefix>/lib/node_modules
        else {
            this.PLUGIN_NODE_MODULE_LOCATION = path_1.join(this.PLUGIN_INSTALL_LOCATION, "lib", "node_modules");
        }
        logger_1.Logger.getImperativeLogger().debug(`PMF node_modules: ${this.PLUGIN_NODE_MODULE_LOCATION}`);
    }
}
exports.PMFConstants = PMFConstants;
//# sourceMappingURL=PMFConstants.js.map